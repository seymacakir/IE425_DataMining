library(lubridate)
library(data.table)
library(dplyr)
library(forecast)
library(caret)
train <- read.csv("C:/Users/seyma/Desktop/IE425project/kobe-train.csv", header = TRUE,sep = ",")
test <- read.csv("C:/Users/seyma/Desktop/IE425project/kobe-test.csv", header = TRUE,sep = ",")
submission <- read.csv("C:/Users/seyma/Desktop/IE425project/kobe-sample-submission.csv", header = TRUE,sep = ",")
#summary(train)
#str(train)
train$shot_made_flag  <- factor(train$shot_made_flag )
train$action_type <- factor(train$action_type)
train$combined_shot_type <-factor(train$combined_shot_type)
train$game_id <- factor(train$game_id)
train$game_event_id <- factor(train$game_event_id)
train$playoffs <- factor(train$playoffs)
train$shot_type  <- factor(train$shot_type)
train$shot_zone_area  <- factor(train$shot_zone_area)
train$shot_zone_basic  <- factor(train$shot_zone_basic)
train$shot_zone_range   <- factor(train$shot_zone_range)
train$team_id     <- factor(train$team_id)
train$team_name  <- factor(train$team_name)
train$game_date   <- as.Date(train$game_date, format= "%d.%m.%Y")
train$game_date <- as.numeric(train$game_date)
train$matchup    <-  factor(train$matchup)
train$opponent <- factor(train$opponent)
#train$court_size <- factor(train$court_size)
df <- train[,c("shot_made_flag","action_type","combined_shot_type", "loc_x", "loc_y","minutes_remaining","game_date", "period", "playoffs", "season", "seconds_remaining", "shot_distance", "opponent")]
test <- test[,c("shot_made_flag","action_type","combined_shot_type", "loc_x", "loc_y","minutes_remaining","game_date", "period", "playoffs", "season", "seconds_remaining", "shot_distance", "opponent")]
#df <- train %>% select(shot_made_flag, action_type, combined_shot_type, game_event_id, game_id, lat, loc_x, loc_y, lon, minutes_remaining, period, playoffs, season, seconds_remaining, shot_distance, shot_type, matchup)
set.seed(425)
str(df)
control=trainControl(method='repeatedcv',number=10,repeats=5)
glm <- train(shot_made_flag~., data=df, method="glm", metric="Accuracy",trControl = control)
summary(glm)
confusionMatrix(glm)
## RPART
rpart_mod = train(
shot_made_flag ~ .,
data = df,
method = "rpart",
trControl = control,
metric= "Accuracy",
tuneGrid = expand.grid(cp = c(1:100)*0.01)
)
rpart_mod
confusionMatrix(rpart_mod)
View(test)
test <- test[,c("X","action_type","combined_shot_type", "loc_x", "loc_y","minutes_remaining","game_date", "period", "playoffs", "season", "seconds_remaining", "shot_distance", "opponent")]
View(test)
set.seed(425)
names(test) <- c("shot_made_flag","action_type","combined_shot_type", "loc_x", "loc_y","minutes_remaining","game_date", "period", "playoffs", "season", "seconds_remaining", "shot_distance", "opponent")
View(test)
predict(glm,test)
test$action_type <- factor(test$action_type)
test$combined_shot_type <-factor(test$combined_shot_type)
test$game_id <- factor(test$game_id)
test$game_event_id <- factor(test$game_event_id)
test$playoffs <- factor(test$playoffs)
test$shot_type  <- factor(test$shot_type)
test$shot_zone_area  <- factor(test$shot_zone_area)
test$shot_zone_basic  <- factor(test$shot_zone_basic)
test$shot_zone_range   <- factor(test$shot_zone_range)
test$team_id     <- factor(test$team_id)
test$team_name  <- factor(test$team_name)
test$game_date   <- as.Date(test$game_date, format= "%d.%m.%Y")
test$game_date <- as.numeric(test$game_date)
test$matchup    <-  factor(test$matchup)
test$opponent <- factor(test$opponent)
View(test)
train <- read.csv("C:/Users/seyma/Desktop/IE425project/kobe-train.csv", header = TRUE,sep = ",")
test <- read.csv("C:/Users/seyma/Desktop/IE425project/kobe-test.csv", header = TRUE,sep = ",")
submission <- read.csv("C:/Users/seyma/Desktop/IE425project/kobe-sample-submission.csv", header = TRUE,sep = ",")
#summary(train)
#str(train)
train$shot_made_flag  <- factor(train$shot_made_flag )
train$action_type <- factor(train$action_type)
train$combined_shot_type <-factor(train$combined_shot_type)
train$game_id <- factor(train$game_id)
train$game_event_id <- factor(train$game_event_id)
train$playoffs <- factor(train$playoffs)
train$shot_type  <- factor(train$shot_type)
train$shot_zone_area  <- factor(train$shot_zone_area)
train$shot_zone_basic  <- factor(train$shot_zone_basic)
train$shot_zone_range   <- factor(train$shot_zone_range)
train$team_id     <- factor(train$team_id)
train$team_name  <- factor(train$team_name)
train$game_date   <- as.Date(train$game_date, format= "%d.%m.%Y")
train$game_date <- as.numeric(train$game_date)
train$matchup    <-  factor(train$matchup)
train$opponent <- factor(train$opponent)
test$action_type <- factor(test$action_type)
test$combined_shot_type <-factor(test$combined_shot_type)
test$game_id <- factor(test$game_id)
test$game_event_id <- factor(test$game_event_id)
test$playoffs <- factor(test$playoffs)
test$shot_type  <- factor(test$shot_type)
test$shot_zone_area  <- factor(test$shot_zone_area)
test$shot_zone_basic  <- factor(test$shot_zone_basic)
test$shot_zone_range   <- factor(test$shot_zone_range)
test$team_id     <- factor(test$team_id)
test$team_name  <- factor(test$team_name)
test$game_date   <- as.Date(test$game_date, format= "%d.%m.%Y")
test$game_date <- as.numeric(test$game_date)
test$matchup    <-  factor(test$matchup)
test$opponent <- factor(test$opponent)
df <- train[,c("shot_made_flag","action_type","combined_shot_type", "loc_x", "loc_y","minutes_remaining","game_date", "period", "playoffs", "season", "seconds_remaining", "shot_distance", "opponent")]
test <- test[,c("X","action_type","combined_shot_type", "loc_x", "loc_y","minutes_remaining","game_date", "period", "playoffs", "season", "seconds_remaining", "shot_distance", "opponent")]
#df <- train %>% select(shot_made_flag, action_type, combined_shot_type, game_event_id, game_id, lat, loc_x, loc_y, lon, minutes_remaining, period, playoffs, season, seconds_remaining, shot_distance, shot_type, matchup)
set.seed(425)
names(test) <- c("shot_made_flag","action_type","combined_shot_type", "loc_x", "loc_y","minutes_remaining","game_date", "period", "playoffs", "season", "seconds_remaining", "shot_distance", "opponent")
predict(glm,test)
predict(glm,test, type = "response")
predict(glm,test, type = "prob")
predicted <- predict(glm,test, type = "prob")
predicted <- predict(glm,test, type = "prob")
View(predicted)
rftree <- randomForest::randomForest(shot_made_flag~.,data=df, ntree= 200, mtry= 6)
str(df)
set.seed(425)
rftree <- randomForest::randomForest(shot_made_flag~ .-action_type -season,data=df, ntree= 200, mtry= 6)
knitr::opts_chunk$set(echo = TRUE, eval= FALSE)
library(lubridate)
library(data.table)
library(dplyr)
library(forecast)
install.packages("caret", dependencies = TRUE)
library(caret)
library(writexl)
train <- read.csv("C:/Users/seyma/Desktop/IE425project/kobe-train.csv", header = TRUE,sep = ",")
test <- read.csv("C:/Users/seyma/Desktop/IE425project/kobe-test.csv", header = TRUE,sep = ",")
submission <- read.csv("C:/Users/seyma/Desktop/IE425project/kobe-sample-submission.csv", header = TRUE,sep = ",")
ggplot(train, aes(x=factor(shot_made_flag)))+
geom_bar(stat="count", width=0.7)+
theme_minimal()
ggplot(train, aes(x=factor(shot_made_flag)))+
geom_bar(stat="count", width=0.7)+
labs(
x = "made_shot_flag",
main = "the distribution of Kobe  Bryant Shots"
)+
theme_minimal()
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color=shot_zone_range)) +
labs(title="Shot zone range") +
#ylim(c(33.7, 34.0883)) +
theme_void() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=fct_infreq(shot_zone_range))) +
geom_bar(aes(fill=shot_zone_range)) +
labs(y="Frequency") +
theme_bw() +
theme(axis.title.x=element_blank(),
legend.position="none")
p1 <- ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color=shot_zone_basic)) +
labs(title="Shot zone range") +
#ylim(c(33.7, 34.0883)) +
theme_void() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
p1
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color=shot_zone_area)) +
labs(title="Shot zone range") +
#ylim(c(33.7, 34.0883)) +
theme_void() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color= shot_type)) +
labs(title="Shot zone range") +
#ylim(c(33.7, 34.0883)) +
theme_void() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color= shot_type)) +
labs(title="Shot Type") +
#ylim(c(33.7, 34.0883)) +
theme_void() +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color=shot_zone_range)) +
labs(title="Shot Zone Range") +
theme_minimal() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color=shot_zone_basic)) +
labs(title="Shot Zone Basic") +
theme_minimal +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color=shot_zone_range)) +
labs(title="Shot Zone Range") +
theme_minimal() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color=shot_zone_basic)) +
labs(title="Shot Zone Basic") +
theme_minimal() +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color=shot_zone_area)) +
labs(title="Shot Zone Area") +
theme_minimal() +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color= shot_type)) +
labs(title="Shot Type") +
theme_minimal +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color=shot_zone_range)) +
labs(title="Shot Zone Range") +
theme_minimal() +
theme(legend.position="none",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color=shot_zone_basic)) +
labs(title="Shot Zone Basic") +
theme_minimal() +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color=shot_zone_area)) +
labs(title="Shot Zone Area") +
theme_minimal() +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=lon, y=lat)) +
geom_point(aes(color= shot_type)) +
labs(title="Shot Type") +
theme_minimal() +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=loc_x, y=loc_y)) +
geom_point(aes(color=shot_made_flag)) +
labs(title="Shot Zone Range") +
theme_minimal() +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=loc_x, y=loc_y)) +
geom_point(aes(alpha=shot_made_flag)) +
labs(title="Shot Zone Range") +
theme_minimal() +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=loc_x, y=loc_y)) +
geom_point(aes(color=shot_made_flag, alpha= 0.25)) +
labs(title="Shot Zone Range") +
theme_minimal() +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=loc_x, y=loc_y)) +
geom_point(aes(color=shot_made_flag), alpha= 0.25) +
labs(title="Shot Zone Range") +
theme_minimal() +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x= shot_distance, y=shot_made_flag)) +
geom_point(aes(color=shot_made_flag), alpha= 0.25) +
labs(title="SHOTS BY X-Y ") +
theme_minimal() +
theme(legend.position="left",
plot.title=element_text(hjust=0.5))
shots %>%
group_by(game_date) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=game_date, y=Accuracy)) +
geom_line(aes(colour=Accuracy))
train %>%
group_by(game_date) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=game_date, y=Accuracy))
train %>%
group_by(game_date) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=game_date, y=Accuracy, group= game_date))
train %>%
group_by(game_date) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=game_date, y=Accuracy, group= 1))
train %>%
group_by(game_date) %>%
summarise(Accuracy=mean(shot_made_flag)) %>%
ggplot(aes(x=season, y=Accuracy, group=1)) +
geom_line(aes(colour=Accuracy)) +
geom_point(aes(colour=Accuracy), size=3) +
scale_colour_gradient(low="orangered", high="chartreuse3") +
labs(title="Accuracy by season", x="Season") +
theme_bw() +
theme(legend.position="none",
axis.text.x=element_text(angle=45, hjust=1),
plot.title=element_text(hjust=0.5))
ggplot(train, aes(x=game_date, y=shot_made_flag)) +
geom_point(aes(color=shot_made_flag), alpha= 0.25)
train$shot_made_flag  <- as.numeric(train$shot_made_flag)
train %>% group_by(game_date) %>% summarize( accuracy = mean(made_shot_flag))
train %>% group_by(game_date)
train %>% group_by(game_date) %>% summarize( accuracy = mean(shot_made_flag))
train$shot_made_flag  <- as.numeric(train$shot_made_flag)
train %>% group_by(game_date) %>% summarize( accuracy = mean(shot_made_flag)) %>%
ggplot(train, aes(x=game_date, y=accuracy)) +
geom_point(aes(color= accuracy), alpha= 0.25)
train$shot_made_flag  <- as.numeric(train$shot_made_flag)
train %>% group_by(game_date) %>% summarize( accuracy = mean(shot_made_flag)) %>%
ggplot(train, aes(x=game_date, y=accuracy)) +
geom_point(aes(color= accuracy))
train %>% group_by(game_date) %>% summarize( accuracy = mean(shot_made_flag)) %>%
ggplot(train, aes(x=game_date, y=accuracy)) +
geom_point(color= accuracy)
train %>% group_by(game_date) %>% summarize( accuracy = mean(shot_made_flag)) %>%
ggplot(aes(x=game_date, y=accuracy)) +
geom_point(color= accuracy)
train %>% group_by(game_date) %>% summarize( accuracy = mean(shot_made_flag)) %>%
ggplot(aes(x=game_date, y=accuracy)) +
geom_point()
train %>% group_by(game_date) %>% summarize( accuracy = mean(shot_made_flag)) %>%
ggplot(aes(x=game_date, y=accuracy, color= accuracy)) +
geom_point()
train %>% group_by(game_date) %>% summarize( accuracy = mean(shot_made_flag)) %>%
ggplot(aes(x=game_date, y=accuracy, color= accuracy)) +
geom_bar()
train %>% group_by(game_date) %>% summarize( accuracy = mean(shot_made_flag)) %>%
ggplot(aes(x=game_date, y=accuracy, color= accuracy)) +
geom_bar(type="idendity")
train %>% group_by(game_date) %>% summarize( accuracy = mean(shot_made_flag)) %>%
ggplot(aes(x=game_date, y=accuracy, color= accuracy)) +
geom_line()
